// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contacts {
  id                   Int              @id @default(autoincrement())
  createdBy            Int?
  user                 Contacts?        @relation("userCreatedBy", fields: [createdBy], references: [id])
  UserContacts         Contacts[]       @relation("userCreatedBy")
  organisationID       Int?
  organisation         Contacts?        @relation("organisation", fields: [organisationID], references: [id])
  organisationContacts Contacts[]       @relation("organisation")
  name                 String           @unique
  isCorporate          Boolean          @default(false)
  notes                String?
  vatOrBpNo            String?
  email                Email[]
  phone                Phone[]
  address              Address[]
  balanceDue           Json?            @default("{\"amount\":0,\"currency\":{\"code\":\"USD\",\"base\":10,\"exponent\":2},\"scale\":3}")
  totalReceipts        Json?            @default("{\"amount\":0,\"currency\":{\"code\":\"USD\",\"base\":10,\"exponent\":2},\"scale\":3}")
  isActive             Boolean          @default(true)
  isUser               Boolean          @default(false)
  userRole             String           @default("USER")
  password             String?
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt()
  Products             Products[]
  Sessions             Sessions[]
  Options              Options[]
  Pricelists           Pricelists[]
  customerContact      Orders[]         @relation("customerID")
  createdOrder         Orders[]         @relation("createdBy")
  customerPayment      Payments[]       @relation("customerID")
  createdPayment       Payments[]       @relation("createdBy")
  PaymentDetails       PaymentDetails[] @relation("createdBy")
  PaymentType          PaymentType[]    @relation("createdBy")
  XchangeRate          XchangeRate[]    @relation("createdBy")
}

model Phone {
  id         Int      @id @default(autoincrement())
  phone      String   @unique
  Contacts   Contacts @relation(fields: [contactsId], references: [id])
  contactsId Int
}

model Email {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  Contacts   Contacts? @relation(fields: [contactsId], references: [id])
  contactsId Int?
}

model Address {
  id         Int       @id @default(autoincrement())
  address    String
  Contacts   Contacts? @relation(fields: [contactsId], references: [id])
  contactsId Int?
}

model Sessions {
  id         Int       @id @default(autoincrement())
  valid      Boolean   @default(true)
  userAgent  String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt()
  Contacts   Contacts? @relation(fields: [contactsId], references: [id])
  contactsId Int?
}

model Products {
  id                Int         @id @default(autoincrement())
  Contacts          Contacts    @relation(fields: [createdBy], references: [id])
  createdBy         Int
  name              String      @unique
  description       String?
  unitPrice         Json?       @default("{\"amount\":0,\"currency\":{\"code\":\"USD\",\"base\":10,\"exponent\":2},\"scale\":3}")
  productCategories String
  stitches          Int?
  units             Int?
  isActive          Boolean
  utilisation       Int?        @default(0)
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt()
  OrderLine         OrderLine[]
}

model Options {
  id        Int      @id @default(autoincrement())
  Contacts  Contacts @relation(fields: [createdBy], references: [id])
  createdBy Int
  group     String
  isActive  Boolean  @default(true)
  isDefault Boolean  @default(false)
  label     String   @unique
  value     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Pricelists {
  id               Int                @id @default(autoincrement())
  Contacts         Contacts           @relation(fields: [createdBy], references: [id])
  createdBy        Int
  name             String             @unique
  isActive         Boolean            @default(true)
  isDefault        Boolean            @default(false)
  PricelistDetails PricelistDetails[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt()
  Orders           Orders[]
}

model PricelistDetails {
  id                       Int         @id @default(autoincrement())
  minimumPrice             Json        @default("{\"amount\":0,\"currency\":{\"code\":\"USD\",\"base\":10,\"exponent\":2},\"scale\":3}")
  pricePerThousandStitches Json        @default("{\"amount\":0,\"currency\":{\"code\":\"USD\",\"base\":10,\"exponent\":2},\"scale\":3}")
  minimumQuantity          Int         @default(0)
  embroideryTypes          String
  Pricelists               Pricelists? @relation(fields: [pricelistsId], references: [id])
  pricelistsId             Int?
}

model Orders {
  id              Int         @id @default(autoincrement())
  createdOrder    Contacts    @relation("createdBy", fields: [createdBy], references: [id])
  createdBy       Int
  customerContact Contacts    @relation("customerID", fields: [customersID], references: [id])
  customersID     Int
  Pricelists      Pricelists  @relation(fields: [pricelistsID], references: [id])
  pricelistsID    Int
  Payments        Payments    @relation(fields: [paymentsId], references: [id])
  paymentsId      Int
  comment         String?
  isActive        Boolean
  orderDate       DateTime    @default(now())
  deliveryDate    DateTime?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt()
  accountsStatus  String
  isInvoiced      Boolean?    @default(false)
  OrderLine       OrderLine[]
}

model OrderLine {
  id                  Int      @id @default(autoincrement())
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt()
  Orders              Orders   @relation(fields: [ordersID], references: [id])
  ordersID            Int
  Products            Products @relation(fields: [productsID], references: [id])
  productsID          Int
  unitPrice           Json     @default("{\"amount\":0,\"currency\":{\"code\":\"USD\",\"base\":10,\"exponent\":2},\"scale\":3}")
  quantity            Int
  manufacturingStatus String?
  embroideryPositions String?
  embroideryTypes     String?
  productCategories   String
}

model Payments {
  id              Int              @id @default(autoincrement())
  createdPayment  Contacts         @relation("createdBy", fields: [createdBy], references: [id])
  createdBy       Int
  customerContact Contacts         @relation("customerID", fields: [customersID], references: [id])
  customersID     Int
  PaymentDetails  PaymentDetails[]

  Orders        Orders[]
  XchangeRate   XchangeRate @relation(fields: [xchangeRateId], references: [id])
  xchangeRateId Int
  paymentDate   DateTime    @default(now())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt()
}

model PaymentDetails {
  id             Int           @id @default(autoincrement())
  createdPayment Contacts      @relation("createdBy", fields: [createdBy], references: [id])
  createdBy      Int
  Payments       Payments      @relation(fields: [paymentsId], references: [id])
  paymentsId     Int
  PaymentType    PaymentType[]
  amount         Json
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt()
}

model PaymentType {
  id               Int             @id @default(autoincrement())
  createdPayment   Contacts        @relation("createdBy", fields: [createdBy], references: [id])
  createdBy        Int
  PaymentDetails   PaymentDetails? @relation(fields: [paymentDetailsId], references: [id])
  paymentDetailsId Int?

  // TODO: Added fields
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model XchangeRate {
  id                 Int                  @id @default(autoincrement())
  createdXchange     Contacts             @relation("createdBy", fields: [createdBy], references: [id])
  createdBy          Int
  isActive           Boolean              @default(true)
  isDefault          Boolean              @default(false)
  xChangeRateDate    DateTime             @default(now())
  Payments           Payments[]
  XchangeRateDetails XchangeRateDetails[]
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt()
}

model XchangeRateDetails {
  id            Int         @id @default(autoincrement())
  XchangeRate   XchangeRate @relation(fields: [xchangeRateId], references: [id])
  xchangeRateId Int
  currency      String
  rate          Json        @default("{\"amount\":0,\"currency\":{\"code\":\"USD\",\"base\":10,\"exponent\":2},\"scale\":3}")
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt()
}
