// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contacts {
  id                   String     @id @default(uuid())
  createdBy            String?
  user                 Contacts?  @relation("userCreatedBy", fields: [createdBy], references: [id])
  UserContacts         Contacts[] @relation("userCreatedBy")
  organisationID       String?
  organisation         Contacts?  @relation("organisation", fields: [organisationID], references: [id])
  organisationContacts Contacts[] @relation("organisation")
  name                 String     @unique
  isCorporate          Boolean    @default(false)
  notes                String?
  vatOrBpNo            String?
  email                Email[]
  phone                Phone[]
  address              Address[]
  balanceDue           Json?      @default("{\"amount\":0,\"currency\":{\"code\":\"USD\",\"base\":10,\"exponent\":2},\"scale\":3}")
  totalReceipts        Json?      @default("{\"amount\":0,\"currency\":{\"code\":\"USD\",\"base\":10,\"exponent\":2},\"scale\":3}")
  isActive             Boolean    @default(true)
  isUser               Boolean    @default(false)
  userRole             String     @default("USER")
  password             String?
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt()
  Products             Products[]
  Sessions             Sessions[]
}

model Products {
  id                String   @id @default(uuid())
  Contacts          Contacts @relation(fields: [createdBy], references: [id])
  createdBy         String
  name              String   @unique
  productID         String   @unique
  description       String
  unitPrice         Json
  productCategories String
  stitches          Int?
  quantity          Int?
  isActive          Boolean
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt()
}

model Phone {
  id         String   @id @default(uuid())
  phone      String   @unique
  Contacts   Contacts @relation(fields: [contactsId], references: [id])
  contactsId String
}

model Email {
  id         String   @id @default(uuid())
  email      String   @unique
  Contacts   Contacts @relation(fields: [contactsId], references: [id])
  contactsId String
}

model Address {
  id         String   @id @default(uuid())
  address    String
  Contacts   Contacts @relation(fields: [contactsId], references: [id])
  contactsId String
}

model Sessions {
  id         String    @id @default(uuid())
  valid      Boolean   @default(true)
  userAgent  String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt()
  Contacts   Contacts? @relation(fields: [contactsId], references: [id])
  contactsId String?
}
